#!/usr/bin/env node
/**
 * @remix-run/serve v1.1.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

require('./env');
var path = require('path');
var os = require('os');
var index = require('./index');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
var os__default = /*#__PURE__*/_interopDefaultLegacy(os);

let port = process.env.PORT || 3000;
let buildPathArg = process.argv[2];

if (!buildPathArg) {
  console.error(`
  Usage: remix-serve <build-dir>`);
  process.exit(1);
}

let buildPath = path__default["default"].resolve(process.cwd(), buildPathArg);
index.createApp(buildPath).listen(port, () => {
  var _Object$values$flat$f;

  let address = (_Object$values$flat$f = Object.values(os__default["default"].networkInterfaces()).flat().find(ip => (ip === null || ip === void 0 ? void 0 : ip.family) == "IPv4" && !ip.internal)) === null || _Object$values$flat$f === void 0 ? void 0 : _Object$values$flat$f.address;

  if (!address) {
    throw new Error("Could not find an IPv4 address.");
  }

  console.log(`Remix App Server started at http://${address}:${port}`);
});
