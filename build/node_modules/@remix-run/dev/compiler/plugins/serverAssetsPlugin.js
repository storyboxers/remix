/**
 * @remix-run/dev v1.1.3
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsesc = require('jsesc');
var invariant = require('../../invariant.js');
var virtualModules = require('../virtualModules.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var jsesc__default = /*#__PURE__*/_interopDefaultLegacy(jsesc);

/**
 * Creates a virtual module of the asset manifest for consumption.
 * See {@link serverEntryModulesPlugin} for consumption.
 */
function serverAssetsPlugin(browserManifestPromiseRef, filter = virtualModules.assetsManifestVirtualModule.filter) {
  return {
    name: "server-assets",

    setup(build) {
      build.onResolve({
        filter
      }, ({
        path
      }) => {
        return {
          path,
          namespace: "assets"
        };
      });
      build.onLoad({
        filter
      }, async () => {
        invariant["default"](browserManifestPromiseRef.current, "Missing browser manifest assets ref in server build.");
        let manifest = await browserManifestPromiseRef.current;
        return {
          contents: `export default ${jsesc__default["default"](manifest, {
            es6: true
          })};`,
          loader: "js"
        };
      });
    }

  };
}

exports.serverAssetsPlugin = serverAssetsPlugin;
